[
  {
    "name": "RoadSense",
    "desc": "An AI-powered Android application that detects road signs in real time using an optimized YOLOv11n model with GPU acceleration, achieving 30ms FPS. The system provides voice-assisted alerts via Google Text-to-Speech, including warnings for overspeeding. A built-in driver behavior analysis module scores performance based on violations such as exceeding speed limits. Designed to improve road safety and assist in driver monitoring for logistics and transport sectors",
    "stack": "YOLOv11n, PyTorch, TFLite, Kotlin, Google TTS, GPS, Room DB",
    "image": "road sense",
    "category": "Machine Learning",
    "links": {
      "view": "https://drive.google.com/drive/folders/1wzdQgvtGrgTFypchJOT6T5PNVcvmT5yk?usp=sharing",
      "code": "https://github.com/YasinduDD/RoadSense"
    }
  },
  {
    "name": "OccluWatch",
    "desc": "A multi-camera vehicle tracking system designed to detect road violations with effective occlusion handling using YOLO for detection and ResNet-based ReID for identity preservation. Utilizes Graph Neural Networks and temporal analysis to optimize cross-camera vehicle tracking. Integrated OCR for automated license plate recognition and backend services to issue violation tickets via SMS and email notifications.",
    "stack": "YOLO, ResNet, Vehicle ReID, GNN, OCR, Python, Flask, Spatial temporal analysis",
    "image": "occluwatch",
    "category": "Machine Learning",
    "links": {
      "view": "https://drive.google.com/drive/folders/1jpdhqB-M_xTqcACjUwfsv9FSf1IjNA-H?usp=sharing",
      "code": ""
    }
  },
  {
    "name": "VetCare",
    "desc": "A distributed pet clinic management system built with Spring Boot microservices architecture. Features core services for managing customers, veterinarians, and pet visits with centralized configuration and service discovery. Deployed on Kubernetes with an AngularJS frontend and RESTful APIs routed via an API Gateway.",
    "stack": "Spring Boot, Spring Cloud, Eureka, AngularJS, MySQL, Kubernetes",
    "image": "vetcare",
    "category": "DevOps",
    "links": {
      "view": "https://drive.google.com/drive/folders/1UxtKk52LDttIBSNKkjpaTqhMZzUsHFSr?usp=sharing",
      "code": ""
    }
  },
  {
    "name": "Intelli",
    "desc": "An intelligent media player with gesture and gaze control. Combines computer vision and parallel processing to enable gesture-based playback and volume control using hand movements, along with eye-tracking for automatic pause and play functionality. Supports various media formats and allows simultaneous processing of hand and eye control modes, with seamless toggling between them.",
    "stack": "OpenCV, Media Pipe, Python, Multiprocessing, Tkinter",
    "image": "intelli",
    "category": "Machine Learning",
    "links": {
      "view": "https://drive.google.com/drive/folders/1-R4HtBAUD2L-S6PHUMPoDx1C3rXHvGvS?usp=sharing",
      "code": "https://github.com/YasinduDD/Intelli"
    }
  },
  {
    "name": " InPath",
    "desc": "An exam process automation platform with predictive analytics. A web and mobile-based learning management system designed to streamline academic workflows. Features a machine learning model that predicts studentsâ€™ future academic pathways based on performance data. The platform includes integrated attendance tracking, intelligent exam seating arrangements, and an automated CV generator with customizable templates.",
    "stack": "Python, Flask, Scikit-learn, HTML/CSS, JavaScript, Flutter",
    "image": "inpath",
    "category": "Machine Learning",
    "links": {
      "view": "https://www.linkedin.com/posts/yasindu-dissanayake-foe_webapplication-exammanagement-activity-7163549272569753602-Urzi?utm_source=share&utm_medium=member_desktop&rcm=ACoAADdpl0UBIjTYqK1Oyr3VGJBaRiuzLfy-4YE",
      "code": "https://github.com/YasinduDD/inPATH"
    }
  },
  {
    "name": " Pixelizer",
    "desc": "A cloud-based photo editing solution with microservice architecture. A scalable photo editing application deployed on AWS, allowing users to perform various edits such as applying templates, decolorizing images, and more. Built using a microservices approach, the system leverages AWS services including ECR, ECS, S3 buckets, and load balancers for efficient deployment, storage, and load management.",
    "stack": "Python, AWS (ECR, ECS, S3), Docker",
    "image": "pixelizer",
    "category": "DevOps",
    "links": {
      "view": "https://drive.google.com/file/d/1Ch8S4xULehU-b2gyeW7ZFxGiZLehR6Wy/view?usp=sharing",
      "code": ""
    }
  },
  {
    "name": "Maze Solver",
    "desc": "An interactive maze-solving tool supporting both randomly generated and image-based mazes. Implements BFS, Dijkstra, and A* algorithms with real-time path visualization. Allows users to select start/end points and see animated solutions. Image-based solving uses skeletonization for accurate path extraction.",
    "stack": "Python, Pygame, NumPy, Skeletonization, BFS, Dijkstra, A*",
    "image": "Maze Solver",
    "category": "Software Development",
    "links": {
      "view": "https://drive.google.com/file/d/1X18nSkWgVJV0mDEtJrSU099MDoaukUPK/view?usp=sharing",
      "code": ""
    }
  },
  {
    "name": "ReelMatch",
    "desc": "A personalized movie recommendation system using NLP. Utilizes machine learning techniques such as TF-IDF Vectorization and cosine similarity to generate tailored movie recommendations. Users can interact through a simple and intuitive web interface built with Streamlit. By entering a movie title, they receive five personalized suggestions based on content similarity.",
    "stack": "Machine Learning, Streamlit, NLP (TF-IDF, Cosine Similarity), Python",
    "image": "ReelMatch",
    "category": "Machine Learning",
    "links": {
      "view": "",
      "code": ""
    }
  },
  {
    "name": "BookTrack",
    "desc": "A console-based library management system showcasing OOP principles. Developed in C++, this application demonstrates a strong grasp of object-oriented programming concepts such as classes, inheritance, and encapsulation. It allows basic library operations like managing books, members, and transactions through a structured, console-based interface.",
    "stack": "C++, Object-Oriented Programming (OOP)",
    "image": "Library",
    "category": "Software Development",
    "links": {
      "view": "",
      "code": ""
    }
  }
]
